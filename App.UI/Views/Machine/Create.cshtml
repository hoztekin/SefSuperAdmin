@model CreateMachineViewModel

@{
    ViewData["Title"] = "Yeni Makine Oluştur";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="body">
    <div class="inner-wrapper">
        <section role="main" class="content-body">
            <header class="page-header">
                <h2>@ViewData["Title"]</h2>
                <div class="right-wrapper text-end">
                    <ol class="breadcrumbs">
                        <li><a href="@Url.Action("Index", "Home")"><i class="bx bx-home-alt"></i></a></li>
                        <li><a href="@Url.Action("Index")">Makine Yönetimi</a></li>
                        <li><span>Yeni Makine</span></li>
                    </ol>
                </div>
            </header>

            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <section class="card">
                        <header class="card-header">
                            <h2 class="card-title">
                                <i class="bx bx-plus"></i> Yeni Makine Bilgileri
                            </h2>
                        </header>
                        <div class="card-body">
                            <form asp-action="Create" method="post" id="createMachineForm" novalidate>
                                @Html.AntiForgeryToken()

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="BranchName" class="form-label">
                                                Şube Adı <span class="text-danger">*</span>
                                            </label>
                                            <input asp-for="BranchName"
                                                   class="form-control form-control-modern"
                                                   placeholder="Örn: Ana Merkez Şubesi">
                                            <span asp-validation-for="BranchName" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="BranchId" class="form-label">
                                                Şube ID <span class="text-danger">*</span>
                                            </label>
                                            <input asp-for="BranchId"
                                                   class="form-control form-control-modern"
                                                   placeholder="Örn: BRANCH-001">
                                            <span asp-validation-for="BranchId" class="text-danger"></span>
                                            <div id="branchIdFeedback" class="feedback-message"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="Code" class="form-label">
                                                Makine Kodu <span class="text-danger">*</span>
                                            </label>
                                            <input asp-for="Code"
                                                   class="form-control form-control-modern"
                                                   placeholder="Örn: MAIN-001">
                                            <span asp-validation-for="Code" class="text-danger"></span>
                                            <div id="codeFeedback" class="feedback-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="ApiAddress" class="form-label">
                                                API Adresi <span class="text-danger">*</span>
                                            </label>
                                            <div class="input-group">
                                                <input asp-for="ApiAddress"
                                                       class="form-control form-control-modern"
                                                       placeholder="https://api.example.com">
                                                <button class="btn btn-outline-secondary"
                                                        type="button"
                                                        id="testConnectionBtn">
                                                    <i class="bx bx-wifi"></i> Test
                                                </button>
                                            </div>
                                            <span asp-validation-for="ApiAddress" class="text-danger"></span>
                                            <div id="connectionFeedback" class="feedback-message"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-4">
                                    <div class="col-12">
                                        <div class="form-actions text-end">
                                            <a href="@Url.Action("Index")" class="btn btn-secondary me-2">
                                                <i class="bx bx-x"></i> İptal
                                            </a>
                                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                                <i class="bx bx-check"></i> Kaydet
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </section>
                </div>
            </div>
        </section>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let codeCheckTimeout, branchIdCheckTimeout;

            // Form validation
            $('#createMachineForm').validate({
                rules: {
                    BranchName: {
                        required: true,
                        maxlength: 100
                    },
                    BranchId: {
                        required: true,
                        maxlength: 50
                    },
                    Code: {
                        required: true,
                        maxlength: 20
                    },
                    ApiAddress: {
                        required: true,
                        url: true,
                        maxlength: 200
                    }
                },
                messages: {
                    BranchName: {
                        required: "Şube adı gereklidir",
                        maxlength: "En fazla 100 karakter olabilir"
                    },
                    BranchId: {
                        required: "Şube ID'si gereklidir",
                        maxlength: "En fazla 50 karakter olabilir"
                    },
                    Code: {
                        required: "Makine kodu gereklidir",
                        maxlength: "En fazla 20 karakter olabilir"
                    },
                    ApiAddress: {
                        required: "API adresi gereklidir",
                        url: "Geçerli bir URL giriniz",
                        maxlength: "En fazla 200 karakter olabilir"
                    }
                },
                errorClass: 'text-danger',
                validClass: 'text-success'
            });

            // Real-time code uniqueness check
            $('#Code').on('input', function() {
                const code = $(this).val().trim();
                const $feedback = $('#codeFeedback');

                clearTimeout(codeCheckTimeout);
                $feedback.html('');

                if (code.length >= 3) {
                    codeCheckTimeout = setTimeout(function() {
                        $.get('@Url.Action("CheckCodeExists")', { code: code })
                        .done(function(response) {
                            if (response.exists) {
                                $feedback.html('<small class="text-danger"><i class="bx bx-x"></i> Bu kod zaten kullanılıyor</small>');
                            } else {
                                $feedback.html('<small class="text-success"><i class="bx bx-check"></i> Kod kullanılabilir</small>');
                            }
                        });
                    }, 500);
                }
            });

            // Real-time branch ID uniqueness check
            $('#BranchId').on('input', function() {
                const branchId = $(this).val().trim();
                const $feedback = $('#branchIdFeedback');

                clearTimeout(branchIdCheckTimeout);
                $feedback.html('');

                if (branchId.length >= 3) {
                    branchIdCheckTimeout = setTimeout(function() {
                        $.get('@Url.Action("CheckBranchIdExists")', { branchId: branchId })
                        .done(function(response) {
                            if (response.exists) {
                                $feedback.html('<small class="text-danger"><i class="bx bx-x"></i> Bu şube ID zaten kullanılıyor</small>');
                            } else {
                                $feedback.html('<small class="text-success"><i class="bx bx-check"></i> Şube ID kullanılabilir</small>');
                            }
                        });
                    }, 500);
                }
            });

            // API connection test
            $('#testConnectionBtn').click(function() {
                const apiAddress = $('#ApiAddress').val().trim();
                const $btn = $(this);
                const $feedback = $('#connectionFeedback');

                if (!apiAddress) {
                    toastr.error('Önce API adresini giriniz');
                    return;
                }

                // URL validation
                try {
                    new URL(apiAddress);
                } catch {
                    toastr.error('Geçerli bir URL giriniz');
                    return;
                }

                $btn.prop('disabled', true)
                    .html('<i class="spinner-border spinner-border-sm me-1"></i> Test ediliyor...');

                $.post('@Url.Action("TestConnection")',
                    JSON.stringify({ apiAddress: apiAddress }),
                    function(response) {
                        if (response.success) {
                            if (response.connected) {
                                $feedback.html('<small class="text-success"><i class="bx bx-check"></i> API adresine başarıyla bağlanıldı</small>');
                                toastr.success(response.message);
                            } else {
                                $feedback.html('<small class="text-warning"><i class="bx bx-error"></i> API adresine bağlanılamadı</small>');
                                toastr.warning(response.message);
                            }
                        } else {
                            $feedback.html('<small class="text-danger"><i class="bx bx-x"></i> Bağlantı testi başarısız</small>');
                            toastr.error(response.message);
                        }
                    }, 'json')
                .fail(function() {
                    $feedback.html('<small class="text-danger"><i class="bx bx-x"></i> Bağlantı testi sırasında hata oluştu</small>');
                    toastr.error('Bağlantı testi sırasında hata oluştu');
                })
                .always(function() {
                    $btn.prop('disabled', false)
                        .html('<i class="bx bx-wifi"></i> Test');
                });
            });

            // Form submit
            $('#createMachineForm').on('submit', function(e) {
                if (!$(this).valid()) {
                    e.preventDefault();
                    toastr.error('Lütfen form hatalarını düzeltiniz');
                    return false;
                }

                $('#submitBtn').prop('disabled', true)
                              .html('<i class="spinner-border spinner-border-sm me-1"></i> Kaydediliyor...');
            });
        });
    </script>

    <style>
        .feedback-message {
            margin-top: 5px;
        }

        .input-group .btn-outline-secondary {
            border-color: #ced4da;
        }

        .form-control.error {
            border-color: #dc3545;
        }

        .form-control.valid {
            border-color: #28a745;
        }
    </style>
}

