@model RoleBasedNavigationViewModel

<!-- Modern Navigation Bar - Fixed Version -->
<nav class="navbar navbar-expand-lg navbar-dark @Model.CssClass" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); box-shadow: 0 4px 15px rgba(0,0,0,0.1);">
    <div class="container-fluid">
        @if (Model.ShowLogo)
        {
            <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">
                <img src="~/img/logo.png" height="40" alt="Logo" class="me-2" />
                <span class="fw-bold text-white">@("API Dashboard")</span>
            </a>
        }

        <button class="navbar-toggler border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navbarRoleBasedNav" aria-controls="navbarRoleBasedNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarRoleBasedNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                @if (Model.IsAuthenticated)
                {
                    <!-- Ana Sayfa - Herkese görünür -->
                    <li class="nav-item">
                        <a class="nav-link rounded-pill mx-1 px-3 py-2 transition-all text-white fw-semibold" asp-controller="Home" asp-action="Index">
                            <i class="fas fa-home me-1"></i>
                            <span>@("Ana Sayfa")</span>
                        </a>
                    </li>

                    @if (Model.IsSuperAdmin)
                    {
                        <!-- SİSTEM ADMİN MENÜSÜ -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle rounded-pill mx-1 px-3 py-2 transition-all text-white fw-semibold" href="#" id="sistemAdminDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-cogs me-1"></i>
                                <span>@("Sistem Yönetimi")</span>
                            </a>
                            <ul class="dropdown-menu shadow-lg border-0" style="border-radius: 15px; margin-top: 10px;">
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" asp-controller="SuperAdmin" asp-action="Index">
                                        <i class="fas fa-tachometer-alt text-primary me-2"></i>
                                        @("Admin Dashboard")
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider mx-2"></li>
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" asp-controller="SuperAdmin" asp-action="Users">
                                        <i class="fas fa-users text-info me-2"></i>
                                        @("Kullanıcı Yönetimi")
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" asp-controller="Machine" asp-action="Index">
                                        <i class="fas fa-server text-success me-2"></i>
                                        @("Makine Yönetimi")
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider mx-2"></li>
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" asp-controller="SuperAdmin" asp-action="GetSystemStats">
                                        <i class="fas fa-chart-bar text-warning me-2"></i>
                                        @("Sistem İstatistikleri")
                                    </a>
                                </li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <!-- NORMAL KULLANICI MENÜSÜ -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle rounded-pill mx-1 px-3 py-2 transition-all text-white fw-semibold" href="#" id="apiServicesDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-plug me-1"></i>
                                <span>@("API Servisleri")</span>
                            </a>
                            <ul class="dropdown-menu shadow-lg border-0" style="border-radius: 15px; margin-top: 10px;">
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" href="javascript:void(0)" onclick="showMachineModal()">
                                        <i class="fas fa-network-wired text-primary me-2"></i>
                                        @("Makine Bağlantısı")
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" href="javascript:void(0)" onclick="checkSelectedMachineHealth()">
                                        <i class="fas fa-heartbeat text-danger me-2"></i>
                                        @("Health Check")
                                    </a>
                                </li>
                                @if (Model.HasSelectedMachine)
                                {
                                    <li><hr class="dropdown-divider mx-2"></li>
                                    <li>
                                        <h6 class="dropdown-header text-center py-2 text-white fw-bold" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); border-radius: 10px; margin: 0 8px;">
                                            <i class="fas fa-server me-2"></i>@(Model.SelectedMachineName)
                                        </h6>
                                    </li>
                                    <li>
                                        <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium" asp-controller="Home" asp-action="ApiOperations">
                                            <i class="fas fa-tools text-warning me-2"></i>
                                            @("API İşlemleri")
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li><hr class="dropdown-divider mx-2"></li>
                                    <li>
                                        <h6 class="dropdown-header text-center py-2 text-muted fw-medium">
                                            <i class="fas fa-server me-2"></i>@("Makine Seçilmemiş")
                                        </h6>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                }
            </ul>

            <!-- Sağ taraf - Kullanıcı menüsü -->
            <ul class="navbar-nav ms-auto">
                @if (Model.IsAuthenticated)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center rounded-pill px-3 py-2 transition-all text-white fw-semibold"
                           href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="d-flex align-items-center">
                                <div class="avatar-circle me-2">
                                    <i class="fas fa-user"></i>
                                </div>
                                <div class="d-none d-md-block">
                                    <small class="text-white opacity-75">Hoş geldiniz,</small>
                                    <div class="fw-semibold text-white">@(Model.UserName)</div>
                                </div>
                                @if (Model.IsAdmin)
                                {
                                    <span class="badge bg-warning text-dark ms-2 rounded-pill fw-bold">
                                        @if (Model.IsSuperAdmin)
                                        {
                                            <i class="fas fa-crown me-1"></i>
                                            @("Super")
                                        }
                                        else
                                        {
                                            <i class="fas fa-shield-alt me-1"></i>
                                            @("Admin")
                                        }
                                    </span>
                                }
                            </div>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end shadow-lg border-0" style="border-radius: 15px; margin-top: 10px; min-width: 280px;">
                            <li>
                                <div class="dropdown-header text-center py-3" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 10px 10px 0 0; margin: -8px -8px 8px -8px;">
                                    <div class="avatar-circle-large mb-2">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="fw-bold text-white">@(Model.UserName)</div>
                                    <small class="text-white opacity-75">@(string.Join(", ", Model.UserRoles ?? new List<string>()))</small>
                                </div>
                            </li>

                            @if (Model.UserRoles != null && Model.UserRoles.Any())
                            {
                                <li>
                                    <h6 class="dropdown-header text-dark fw-semibold">
                                        <i class="fas fa-tags me-1"></i>@("Aktif Roller:")
                                    </h6>
                                </li>
                                @foreach (var role in Model.UserRoles)
                                {
                                    <li>
                                        <span class="dropdown-item-text px-3">
                                            @if (role == "SuperAdmin")
                                            {
                                                <span class="badge bg-warning text-dark rounded-pill fw-semibold">
                                                    <i class="fas fa-crown me-1"></i>@(role)
                                                </span>
                                            }
                                            else if (role == "Admin")
                                            {
                                                <span class="badge bg-primary text-white rounded-pill fw-semibold">
                                                    <i class="fas fa-user-shield me-1"></i>@(role)
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-info text-white rounded-pill fw-semibold">
                                                    <i class="fas fa-tag me-1"></i>@(role)
                                                </span>
                                            }
                                        </span>
                                    </li>
                                }
                                <li><hr class="dropdown-divider mx-2"></li>
                            }

                            <li>
                                <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-dark fw-medium"
                                   href="javascript:void(0)" onclick="showPasswordChangeModal()">
                                    <i class="fas fa-key text-secondary me-2"></i>
                                    @("Şifre Değiştir")
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item rounded-pill mx-2 my-1 px-3 py-2 transition-all text-danger fw-medium" asp-controller="Authentication" asp-action="Logout">
                                    <i class="fas fa-sign-out-alt me-2"></i>
                                    @("Çıkış Yap")
                                </a>
                            </li>
                        </ul>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link rounded-pill mx-1 px-3 py-2 transition-all text-white fw-semibold" asp-controller="Authentication" asp-action="Login">
                            <i class="fas fa-sign-in-alt me-1"></i>
                            <span>@("Giriş")</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-pill mx-1 px-3 py-2 btn btn-outline-light transition-all text-white fw-semibold" asp-controller="Authentication" asp-action="Register">
                            <i class="fas fa-user-plus me-1"></i>
                            <span>@("Kayıt Ol")</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<!-- Şifre Değiştirme Modalı -->
@if (Model.IsAuthenticated)
{
    <div class="modal fade" id="passwordChangeModal" tabindex="-1" aria-labelledby="passwordChangeModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="border: none; border-radius: 15px; overflow: hidden;">
                <div class="modal-header text-white" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <h5 class="modal-title fw-bold" id="passwordChangeModalLabel">
                        <i class="fas fa-key me-2"></i>Şifre Değiştir
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <form id="passwordChangeForm">
                    @Html.AntiForgeryToken()
                    <div class="modal-body p-4">
                        <div class="alert alert-info border-0" style="background: rgba(102, 126, 234, 0.1);">
                            <i class="fas fa-info-circle me-2"></i>
                            <small>Güvenliğiniz için güçlü bir şifre seçin.</small>
                        </div>

                        <div class="mb-3">
                            <label for="currentPassword" class="form-label fw-medium">
                                <i class="fas fa-lock me-1 text-secondary"></i>Mevcut Şifre
                            </label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="currentPassword" name="OldPassword" required
                                       placeholder="Mevcut şifrenizi girin" style="border-radius: 8px 0 0 8px;">
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('currentPassword')" style="border-radius: 0 8px 8px 0;">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label fw-medium">
                                <i class="fas fa-key me-1 text-success"></i>Yeni Şifre
                            </label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="newPassword" name="NewPassword" required
                                       placeholder="Yeni şifrenizi girin" style="border-radius: 8px 0 0 8px;">
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('newPassword')" style="border-radius: 0 8px 8px 0;">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback"></div>
                            <small class="text-muted">En az 6 karakter olmalıdır.</small>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label fw-medium">
                                <i class="fas fa-check-double me-1 text-warning"></i>Yeni Şifre Tekrar
                            </label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword" required
                                       placeholder="Yeni şifrenizi tekrar girin" style="border-radius: 8px 0 0 8px;">
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('confirmPassword')" style="border-radius: 0 8px 8px 0;">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>
                    <div class="modal-footer border-0 p-4">
                        <button type="button" class="btn btn-secondary rounded-pill px-4" data-bs-dismiss="modal">
                            <i class="fas fa-times me-2"></i>İptal
                        </button>
                        <button type="submit" class="btn btn-primary rounded-pill px-4" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border: none;">
                            <i class="fas fa-save me-2"></i>Şifreyi Değiştir
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<!-- jQuery ve Bootstrap JS - CRITICAL -->
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Modern Styling -->
<style>
    .transition-all {
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        background-color: rgba(255, 255, 255, 0.15) !important;
        transform: translateY(-1px);
        box-shadow: 0 4px 10px rgba(0,0,0,0.2);
    }

    .dropdown-item:hover {
        background-color: rgba(102, 126, 234, 0.1) !important;
        transform: translateX(5px);
    }

    .avatar-circle {
        width: 32px;
        height: 32px;
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid rgba(255, 255, 255, 0.4);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        color: white;
    }

    .avatar-circle-large {
        width: 60px;
        height: 60px;
        background: rgba(255, 255, 255, 0.2);
        border: 3px solid rgba(255, 255, 255, 0.4);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        margin: 0 auto;
        color: white;
    }

    .dropdown-menu {
        animation: fadeInDown 0.3s ease;
        border: 1px solid rgba(0,0,0,0.1);
    }

    @@keyframes fadeInDown {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .navbar-brand {
        transition: all 0.3s ease;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .badge {
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%

    {
        opacity: 1;
    }

    50% {
        opacity: 0.8;
    }

    100% {
        opacity: 1;
    }

    }

    /* Modern scrollbar for dropdown menus */
    .dropdown-menu {
        max-height: 400px;
        overflow-y: auto;
    }

        .dropdown-menu::-webkit-scrollbar {
            width: 4px;
        }

        .dropdown-menu::-webkit-scrollbar-track {
            background: rgba(0,0,0,0.1);
            border-radius: 10px;
        }

        .dropdown-menu::-webkit-scrollbar-thumb {
            background: rgba(102, 126, 234, 0.6);
            border-radius: 10px;
        }

    /* Improved text contrast */
    .text-white {
        color: #ffffff !important;
        text-shadow: 0 1px 2px rgba(0,0,0,0.3);
    }

    .fw-semibold {
        font-weight: 600;
    }

    .fw-bold {
        font-weight: 700;
    }

    /* Modal improvements */
    .modal-content {
        box-shadow: 0 20px 60px rgba(0,0,0,0.2);
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    /* Responsive improvements */
    @@media (max-width: 991.98px) {
        .navbar-nav .nav-link

    {
        text-align: center;
        margin: 2px 0;
    }

    .dropdown-menu {
        border-radius: 10px;
        margin-top: 5px;
    }

    }
</style>

<script>
    $(document).ready(function() {
        console.log('Navigation loaded successfully');

        // Navigation enhancement
        updateSelectedMachineMenu();

        // Initialize Bootstrap tooltips if needed
        $('[data-bs-toggle="tooltip"]').tooltip();

        // Smooth dropdown animations
        $('.dropdown').on('show.bs.dropdown', function() {
            $(this).find('.dropdown-menu').addClass('animate__animated animate__fadeInDown animate__faster');
        });

        $('.dropdown').on('hide.bs.dropdown', function() {
            $(this).find('.dropdown-menu').removeClass('animate__animated animate__fadeInDown animate__faster');
        });

        // Add smooth scrolling and modern interactions
        $('.nav-link, .dropdown-item').hover(
            function() {
                $(this).css('box-shadow', '0 4px 15px rgba(0,0,0,0.1)');
            },
            function() {
                $(this).css('box-shadow', 'none');
            }
        );
    });

    // Şifre değiştirme modalını göster
    function showPasswordChangeModal() {
        $('#passwordChangeModal').modal('show');
        // Formu temizle
        $('#passwordChangeForm')[0].reset();
        $('#passwordChangeForm .is-invalid').removeClass('is-invalid');
        $('.invalid-feedback').text('');
    }

    // Şifre görünürlüğünü değiştir
    function togglePassword(inputId) {
        const input = document.getElementById(inputId);
        const button = input.nextElementSibling;
        const icon = button.querySelector('i');

        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    // Şifre değiştirme form submit
    $('#passwordChangeForm').on('submit', function(e) {
        e.preventDefault();

        const currentPassword = $('#currentPassword').val();
        const newPassword = $('#newPassword').val();
        const confirmPassword = $('#confirmPassword').val();

        // Client-side validasyon
        let isValid = true;

        if (!currentPassword) {
            showFieldError('currentPassword', 'Mevcut şifre gereklidir');
            isValid = false;
        }

        if (!newPassword) {
            showFieldError('newPassword', 'Yeni şifre gereklidir');
            isValid = false;
        } else if (newPassword.length < 6) {
            showFieldError('newPassword', 'Şifre en az 6 karakter olmalıdır');
            isValid = false;
        }

        if (!confirmPassword) {
            showFieldError('confirmPassword', 'Şifre tekrarı gereklidir');
            isValid = false;
        } else if (newPassword !== confirmPassword) {
            showFieldError('confirmPassword', 'Şifreler eşleşmiyor');
            isValid = false;
        }

        if (!isValid) return;

        // Loading state
        const submitBtn = $(this).find('button[type="submit"]');
        const originalText = submitBtn.html();
        submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Değiştiriliyor...').prop('disabled', true);

        // AJAX ile gönder
        $.ajax({
            url: '@Url.Action("PasswordChange", "Password")',
            type: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            },
            data: {
                OldPassword: currentPassword,
                NewPassword: newPassword,
                ConfirmNewPassword: confirmPassword,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                console.log('Success Response:', response);

                if (response.success) {
                    $('#passwordChangeModal').modal('hide');

                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            title: 'Başarılı!',
                            text: response.message || 'Şifreniz başarıyla değiştirildi!',
                            icon: 'success',
                            confirmButtonColor: '#667eea',
                            timer: 3000,
                            showConfirmButton: false
                        });
                    } else {
                        alert('Şifreniz başarıyla değiştirildi!');
                    }
                } else {
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            title: 'Hata!',
                            text: response.message || 'Şifre değiştirilemedi',
                            icon: 'error',
                            confirmButtonColor: '#d33'
                        });
                    } else {
                        alert('Hata: ' + (response.message || 'Şifre değiştirilemedi'));
                    }
                }
            },
            error: function(xhr, status, error) {
                console.error('AJAX Error:', {xhr, status, error, response: xhr.responseText});

                let errorMessage = 'Bağlantı hatası oluştu.';

                if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                } else if (xhr.status === 500) {
                    errorMessage = 'Sunucu hatası oluştu.';
                }

                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        title: 'Hata!',
                        text: errorMessage,
                        icon: 'error',
                        confirmButtonColor: '#d33'
                    });
                } else {
                    alert('Hata: ' + errorMessage);
                }
            },
            complete: function() {
                submitBtn.html(originalText).prop('disabled', false);
            }
        });
    });

    // Form field error göster
    function showFieldError(fieldName, message) {
        const field = $('#' + fieldName);
        const feedback = field.closest('.mb-3').find('.invalid-feedback');

        field.addClass('is-invalid');
        feedback.text(message);

        // 3 saniye sonra hata mesajını temizle
        setTimeout(() => {
            field.removeClass('is-invalid');
            feedback.text('');
        }, 3000);
    }

    function updateSelectedMachineMenu() {
        if (!@Json.Serialize(Model.IsAdmin)) {
            $.get('@Url.Action("GetSelectedMachine", "Home")')
                .done(function(response) {
                    const header = $('.dropdown-header').filter(':contains("Makine")').first();
                    if (response.success && header.length) {
                        header.html('<i class="fas fa-server text-success me-2"></i>' + response.data.branchName);
                    } else if (header.length) {
                        header.html('<i class="fas fa-server text-muted me-2"></i>@("Makine Seçilmemiş")');
                    }
                })
                .fail(function(error) {
                    console.warn('@("Seçili makine kontrol edilemedi:")', error);
                });
        }
    }

    function showMachineModal() {
        if (typeof window.showMachineModal === 'function') {
            window.showMachineModal();
        } else if (typeof showMachineSelectionModal === 'function') {
            showMachineSelectionModal();
        } else {
            showNotification('@("Makine seçim modalı yükleniyor...")', 'info');
            console.info('@("Makine modal fonksiyonu bulunamadı. Alternatif yöntemler deneniyor...")');
        }
    }

    function checkSelectedMachineHealth() {
        if (typeof window.checkSelectedMachineHealth === 'function') {
            window.checkSelectedMachineHealth();
        } else if (typeof checkMachineHealth === 'function') {
            checkMachineHealth();
        } else {
            showNotification('@("Health check başlatılıyor...")', 'info');
            console.info('@("Health check fonksiyonu bulunamadı. Alternatif yöntemler deneniyor...")');
        }
    }

    // Utility function for notifications
    function showNotification(message, type) {
        type = type || 'info';

        if (typeof toastr !== 'undefined') {
            toastr[type](message);
        } else if (typeof Swal !== 'undefined') {
            Swal.fire({
                icon: type,
                title: message,
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });
        } else {
            console.log(type.toUpperCase() + ': ' + message);
            // Fallback browser notification
            if (window.Notification && Notification.permission === 'granted') {
                new Notification(message);
            } else {
                alert(message);
            }
        }
    }
</script>